---
Mappings:
  RegionMap:
    us-east-1:
      "32":"ami-6411e20d"
      "64":"ami-7a11e213" 
    us-west-1:
        "32":"ami-c9c7978c"
        "64":"ami-7a11e213"  
    eu-west-1:
      "32":"ami-6411e20d"
      "64":"ami-7a11e213" 
    ap-southeast-1:
        "32":"ami-c9c7978c"
        "64":"ami-7a11e213"        
Parameters:
  SecurityGroupDescription:
    Description: Security Group Description
    Type: String

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref SSHSecurityGroup
        - !Ref ServerSecurityGroup

  # an elastic IP for our instance
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref MyInstance

  # our EC2 security group
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22

  # our second EC2 security group
  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref SecurityGroupDescription
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 192.168.1.1/32
    
  Outputs:
    StackSSHSecurityGroup:
      Description: The SSH Security Group for our company
      value: !Ref SSHSecurityGroup
      Export:
      name: SSHSecurityGroup       
